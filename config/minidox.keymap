/*
 * Copyright (c) 2024 pickme467
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&sl {
    release-after-ms = <500>;
};

/ {
        macros {
                lm: lm {
                   compatible = "zmk,behavior-macro-two-param";
                   wait-ms = <0>;
                   tap-ms = <0>;
                   #binding-cells = <2>;
                   bindings
                       = <&macro_param_1to1>
                       , <&macro_tap &mo MACRO_PLACEHOLDER>
                       , <&macro_param_2to1>
                       , <&macro_tap &kp MACRO_PLACEHOLDER>
                       ;
               };
        };

        behaviors {
                td_layr: tap_dance_0 {
                   compatible = "zmk,behavior-tap-dance";
                   #binding-cells = <0>;
                   tapping-term-ms = <217>;
                   bindings = <&mo 1>, <&mo 2>, <&mo 3>;
                };
                td_lctl: tap_dance_1 {
                   compatible = "zmk,behavior-tap-dance";
                   #binding-cells = <0>;
                   tapping-term-ms = <217>;
                   bindings = <&kp LCTL>, <&lm 1 LCTL>, <&lm 2 LCTL>, <&lm 3 LCTL>;
                };
                td_ralt: tap_dance_2 {
                   compatible = "zmk,behavior-tap-dance";
                   #binding-cells = <0>;
                   tapping-term-ms = <217>;
                   bindings = <&mo 4>, <&lm 4 LCTL>, <&kp LGUI>;
                };
                td_lalt: tap_dance_3 {
                   compatible = "zmk,behavior-tap-dance";
                   #binding-cells = <0>;
                   tapping-term-ms = <217>;
                   bindings = <&kp LALT>, <&kp LA(RSHFT)>, <&kp LA(LGUI)>;
                };
                td_rsft: tap_dance_4 {
                   compatible = "zmk,behavior-tap-dance";
                   #binding-cells = <0>;
                   tapping-term-ms = <217>;
                   bindings = <&kp RSHFT>, <&kp LGUI>, <&kp RS(LGUI)>, <&kp LA(RS(LGUI))>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp SQT  &kp COMMA &kp DOT  &kp P      &kp Y      &kp F    &kp G     &kp C &kp R &kp L
   &kp A    &kp O     &kp E    &kp U      &kp I      &kp D    &kp H     &kp T &kp N &kp S
   &kp SEMI &kp Q     &kp J    &kp K      &kp X      &kp B    &kp M     &kp W &kp V &kp Z
                      &td_ralt &td_lctl   &td_layr   &td_lalt &kp SPACE &td_rsft
                        >;
                };
                number_layer {
                        bindings = <
   &kp BSLH &kp COMMA &kp DOT  &kp PIPE   &kp ASTRK   &kp QMARK &kp N1    &kp N2 &kp N3 &kp N0
   &kp TAB  &kp EQUAL &kp PLUS &kp UNDER  &kp MINUS   &kp SLASH &kp N4    &kp N5 &kp N6 &kp BSPC
   &kp ESC  &trans    &trans   &trans     &trans      &kp RCTRL &kp N7    &kp N8 &kp N9 &kp RET
                      &trans   &trans     &trans      &td_lalt  &kp SPACE &td_rsft
                        >;
                };

                functions_layer {
                        bindings = <
   &trans       &trans       &trans       &sys_reset   &bootloader    &bootloader &sys_reset &trans    &trans  &bt BT_CLR
   &kp CAPS     &kp SLCK     &trans       &trans       &trans         &trans      &trans     &kp PG_UP &trans  &trans
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans      &kp HOME   &kp PG_DN &kp END &kp RET
                             &trans       &trans       &trans         &td_lalt    &kp SPACE  &td_rsft
                        >;
                };

                strings_layer {
                        bindings = <
   &kp F1 &kp F2 &kp F3       &kp F4     &kp F5    &kp F6  &kp F7 &kp F8 &kp F9 &kp F10
   &trans &trans &kp C_VOL_UP &kp C_MUTE &kp F11   &kp F12 &trans &trans &trans &trans
   &trans &trans &kp C_VOL_DN &trans     &trans    &trans  &trans &trans &trans &trans
                 &trans       &trans     &trans    &trans  &trans &trans
                        >;
                };

                ralts_layer {
                        bindings = <
   &kp INS   &kp GRAVE &kp TILDE &kp LBKT &kp LT     &kp GT   &kp RBKT  &kp RA(C) &trans    &kp RA(L)
   &kp RA(A) &kp RA(O) &kp RA(E) &kp LPAR &kp LBRC   &kp RBRC &kp RPAR  &kp UP    &kp RA(N) &kp RA(S)
   &kp DEL   &kp F8    &kp LSHFT &kp F9   &kp RA(X)  &trans   &kp LEFT  &kp DOWN  &kp RIGHT &kp RA(Z)
                       &trans    &trans   &trans     &td_lalt &kp SPACE &td_rsft
                        >;
                };
        };
};
